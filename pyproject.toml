[project]
name = "postprocessing"
description = "Post-processing agent to automatically catalog and reduce neutron data"
version = "3.5.0"
requires-python = ">=3.9"
dependencies = [
    "requests",
    "plotly",
    "stomp.py",
]
license = { text = "MIT" }

[project.urls]
homepage = "https://github.com/neutrons/post_processing_agent"

[build-system]
requires = [
  "setuptools",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["postprocessing", "postprocessing.processors", "scripts"]

[tool.ruff]
line-length = 120
# https://beta.ruff.rs/docs/rules/
#select = ["A", "ARG", "BLE", "E", "F", "I", "PT"]
ignore = ["E401", "E402", "F403", "F405" # issues with imports
]

[tool.pytest.ini_options]
pythonpath = [".", "scripts"]

# PIXI configuration
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "win-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
postprocessing = { path = ".", editable = true }
plot_publisher = { git = "https://github.com/neutrons/plot_publisher.git", branch = "main" }

[tool.pixi.dependencies]
python = ">=3.9"
h5py = "*"
psutil = "*"
requests = "*"
"stomp.py" = "7.*"
plotly = "*"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
coverage = "*"

[tool.pixi.feature.dev.dependencies]
pre-commit = "*"
python-build = "*"
pip = "*"

[tool.pixi.feature.build.dependencies]
python-build = "*"
setuptools = "*"

[tool.pixi.environments]
default = { features = ["test"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }
dev = { features = ["test", "dev"], solve-group = "default" }
build = { features = ["build"], solve-group = "default" }

[tool.pixi.tasks]
# Testing tasks
test = "python -m pytest tests/"
test-unit = "python -m pytest tests/unit/"
test-integration = "python -m pytest tests/integration/"
test-cov = "python -m pytest -vv --cov=postprocessing --cov=scripts --cov-report=xml --cov-report=term"

# Development tasks
install-pre-commit = "pre-commit install"
lint = "pre-commit run --all-files"
clean = "rm -rf build/ dist/ *.egg-info/ .pytest_cache/ .coverage coverage.xml"

# Build tasks
build = "python -m build"
build-wheel = "python -m build --wheel"
build-sdist = "python -m build --sdist"
